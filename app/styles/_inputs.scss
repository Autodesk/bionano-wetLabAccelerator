$input-hover-padding-vert: 1px;
$input-hover-padding-hori: 0.6em;

.form-control {
  &.ng-invalid,
  &.ng-error {
    //bootstrap
    border-color: #843534;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;
  }
}

.input-styled {
  -webkit-appearance: none;
  display: inline-block;
  border: 2px solid transparent;
  margin:0;
  padding: 0;
  outline: 0;
  background: transparent;
  line-height: 1.2em;
  color: $black;
  cursor: text;

  &:hover,
  &:focus {
    -webkit-appearance: none;
    border-radius: 1em;
    //need special values esp. for auto-grow directive because inputs are usually just large enough to show input
    box-sizing: content-box;
    padding: $input-hover-padding-vert 0 $input-hover-padding-vert $input-hover-padding-hori;
    margin: (-$input-hover-padding-vert) $input-hover-padding-hori (-$input-hover-padding-vert) (-$input-hover-padding-hori);
  }

  &:hover {
    background: $primary;
    color: $white;
    &::-webkit-input-placeholder {
      color: $white;
    }
  }

  &:focus {
    border: 2px solid $primary;
    background: transparent;
    color: $black;

    &::-webkit-input-placeholder {
      color: transparent;
    }
  }

  &::-webkit-input-placeholder {
    color: $warning;
  }

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

.dimensional-unit {}

.true-false-button {
  width: 100px;
  height: 21px;
  background: $light-grey;
  border-radius: 50px;
  position: relative;
  font-size: $font-size-sm;

  &:before {
    content: 'TRUE';
    color: $grey;
    position: relative;
    left: 10px;
    top: 1px;
    z-index: 0;
  }

  &:after {
    content: 'FALSE';
    color: $grey;
    position: relative;
    left: 4px;
    top: 1px;
    z-index: 0;
  }

  & label {
    display: block;
    width: 52px;
    height: 21px;
    top:0;
    border-radius: 50px;
    transition: all .4s ease;
    cursor: pointer;
    position: absolute;
    left: 48px;
    z-index: 1;
    background: $dark-grey;
    color: $white;

    &:after {
      content: 'FALSE';
      position: relative;
      left: 6px;
      top: 2px;
    }
  }

  & input[type=checkbox]:checked + label {
    width: 48px;
    left: 0;
    background: $primary;

    &:after {
      content: 'TRUE';
      left: 7px;
    }
  }

  input[type=checkbox] {
    visibility: hidden;
  }
}

.input-unstyled {
  display: inline-block;
  -webkit-appearance: none;
  outline: 0;
  border: 0;
  background: transparent;
  cursor: text;

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

input[type="color"].color-swatch {
  -webkit-appearance: none;
  width: 20px;
  height: 20px;
  padding: 0;
  color: transparent;
  background-color: transparent;
  border: 1px solid transparent;
  &::-webkit-color-swatch-wrapper {
    padding: 0;
    border: 1px solid transparent;
  }
  &::-webkit-color-swatch {
    border: 1px solid transparent;
    border-radius: 10px;
  }
}

.option-button {

  justify-content: center;
  align-items: baseline;
  background: transparent;
  border: none;
  cursor: pointer;
  text-align: center;
  padding: 0;
  outline: 0;
  line-height: 1.2em;
  white-space: nowrap;

  .option-toggle {}

  .option-button-label {}

  .option-button-caret {
    opacity: 0;
    font-size: $font-size-sm;
  }

  &:hover {
    background: $primary;
    color: $white;
    border-radius: 1em;
    padding: $input-hover-padding-vert $input-hover-padding-hori;
    margin: (-$input-hover-padding-vert) (-$input-hover-padding-hori);

    .option-button-label {
      color: $white;
    }

    .option-button-caret {
      opacity: 1;
    }
  }
}


// textarea

//to be used with input-unstyled on a textarea, can be used with json-editor directive
.popover-textarea {
  min-width: 300px;
  background-color: transparent;
  color: $black;
  transition-duration: $transition-short-time;
  transition-property: background-color, border-color;
  margin-bottom: $layout-spacing-md;

  &:focus,
  &:active {
    background-color: darken($white, 3);
  }

  &.ng-invalid {
    background-color: transparentize($error, 0.85);
  }
}